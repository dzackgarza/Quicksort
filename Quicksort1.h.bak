/*****************************************************

    Zack Garza
    CISP 430 - TTH 5:30 pm
    Programming Project 4 - Recursive Sorting / Quicksort
    24 October 2013

*****************************************************/

#ifndef QUICK_SORT_H
#define QUICK_SORT_H
#define ItemType int
#include <cstdlib>
void Quicksort2( void* base, size_t nelem, size_t width,
                void (*fcmp)( const void*, const void* ) );

size_t Partition2(void* it, size_t nelem, size_t width,
                   int (*fcmp)(const void*, const void*) );

void Quicksort( ItemType*, size_t,
                int (*)(const ItemType&, const ItemType&) );

unsigned Partition(void*, size_t,
                   int (*)(const ItemType&, const ItemType&) );

void SwapIndex(unsigned& i1, unsigned& i2);

void SwapItem(void*, unsigned&, unsigned&, size_t);

void ptrswap(int** a, int** b);

void MoveIndex(unsigned&, unsigned&);

bool OutOfOrder (void*, unsigned, unsigned, size_t,
                  int (*fcmp)(const void*, const void*) );

#endif
